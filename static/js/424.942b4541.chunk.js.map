{"version":3,"file":"static/js/424.942b4541.chunk.js","mappings":"qPAEaA,EAAcC,EAAAA,GAAAA,GAAH,qDAKXC,EAAcD,EAAAA,GAAAA,GAAH,wIASXE,EAAcF,EAAAA,GAAAA,GAAH,8DAKXG,EAAaH,EAAAA,GAAAA,EAAH,qD,SCuBvB,EAtCuB,WACrB,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAASC,EAAAA,EAAAA,MAgBf,OAdAC,EAAAA,EAAAA,YAAU,WAKRC,MAAM,GAAD,OACAC,EAAAA,GADA,kBACsBJ,EAAOK,QAD7B,4BACwDD,EAAAA,GADxD,oBAGFE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJR,EAAgBQ,EAASE,QAC1B,IACAC,MAAMC,QAAQC,QAVlB,GAAE,IAYCd,EAAae,OAAS,GAEtB,+BACE,SAACrB,EAAD,UACGM,EAAagB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,UAACvB,EAAD,YACE,SAACC,EAAD,UAAcqB,KACd,SAACpB,EAAD,UAAaqB,MAFGF,EAKrB,SAKA,qEAEV,C","sources":["components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin: 0;\n  padding: 10px;\n  list-style-type: none;\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ReviewAutor = styled.h3`\n  margin-botom: 20px;\n  padding: 0;\n`;\n\nexport const ReviewText = styled.p`\n  margin: 0;\n  padding: 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../ApiThemoviedb/ApiThemoviedb';\nimport { ReviewsList, ReviewsItem, ReviewAutor, ReviewText } from './MovieReviews.styled';\n/* eslint-disable react-hooks/exhaustive-deps */\n\nexport const Reviews = () => {\n  const [reviewsMovie, setReviewsMovie] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    fetchReviewsMovie();\n  }, []);\n\n  function fetchReviewsMovie() {\n    fetch(\n      `${API.BASE_URL}/movie/${params.movieId}/reviews?api_key=${API.API_KEY}&language=en-US`\n    )\n      .then(response => response.json())\n      .then(response => {\n        setReviewsMovie(response.results);\n      })\n      .catch(console.error());\n  }\n  if (reviewsMovie.length > 0) {\n    return (\n      <>\n        <ReviewsList>\n          {reviewsMovie.map(({ id, author, content }) => {\n            return (\n              <ReviewsItem key={id}>\n                <ReviewAutor>{author}</ReviewAutor>\n                <ReviewText>{content}</ReviewText>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      </>\n    );\n  } else {\n    return <div>We don`t have any reviews for this movie</div>;\n  }\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","styled","ReviewsItem","ReviewAutor","ReviewText","useState","reviewsMovie","setReviewsMovie","params","useParams","useEffect","fetch","API","movieId","then","response","json","results","catch","console","error","length","map","id","author","content"],"sourceRoot":""}