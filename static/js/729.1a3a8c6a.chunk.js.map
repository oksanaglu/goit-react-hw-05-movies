{"version":3,"file":"static/js/729.1a3a8c6a.chunk.js","mappings":"wQAEaA,EAAiBC,EAAAA,GAAAA,IAAH,uEAMdC,EAAaD,EAAAA,GAAAA,OAAH,uhBAgCVE,EAAmBF,EAAAA,GAAAA,IAAH,6DAKhBG,EAAoBH,EAAAA,GAAAA,IAAH,+DAKjBI,EAAkBJ,EAAAA,GAAAA,IAAH,6Q,SC2B5B,EArE4B,WAAO,IAAD,IAC1BK,GAASC,EAAAA,EAAAA,MACf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,IAZAC,EAAAA,EAAAA,YAAU,WAKRC,MAAM,GAAD,OAAIC,EAAAA,GAAJ,kBAA0BT,EAAOU,QAAjC,oBAAoDD,EAAAA,KACtDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAE,MAAMC,QAAQC,QARlB,GAAE,KAUoB,IAAnBb,EAAOc,QACT,OACE,UAACvB,EAAD,YACE,SAACE,EAAD,CAAYsB,KAAK,SAASC,UAAU,SAApC,UACE,UAAC,KAAD,CAASC,GAAG,IAAZ,WAAgB,SAAC,MAAD,CAAeC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,MAA3D,iBAEF,SAAC1B,EAAD,WACE,2EAKR,IAAQ2B,EACNrB,EADMqB,eAAgBC,EACtBtB,EADsBsB,YAAaC,EACnCvB,EADmCuB,SAAUC,EAC7CxB,EAD6CwB,aAAcC,EAC3DzB,EAD2DyB,OAGvDC,EAAY,oBAAGxB,EAASyB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,UAACrC,EAAD,YACE,SAACE,EAAD,CAAYsB,KAAK,SAASC,UAAU,SAApC,UACE,UAAC,KAAD,CAASC,GAAIS,EAAb,WAA2B,SAAC,MAAD,CAAeR,MAAO,CAAEC,MAAO,GAAIC,OAAQ,MAAtE,iBAEF,UAAC1B,EAAD,YACE,gBACEmC,IAAG,UAAKvB,EAAAA,IAAL,OAA0BgB,GAC7BQ,IAAKT,EACLF,MAAM,SAER,UAACxB,EAAD,YACE,wBAAK0B,KACL,uCAA8B,GAAfG,EAAf,QACA,sCACA,uBAAID,KACJ,mCACCE,GACCA,EAAOM,KAAI,YACT,OADuB,EAAXC,KACE,GACf,WAGP,oDACA,UAACpC,EAAD,YACE,SAAC,KAAD,CAASqB,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,yBAEF,SAAC,EAAAgB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  // width: 650px;\n  // margin-left: 10px;\n\n`;\n\nexport const NavLinkBtn = styled.button`  \n    grid-gap: 5px;\n    gap: 5px;\n    font-size: 14px;\n    border: none;\n    background-color: inherit;\n    color: #2e2e2e;\n    text-decoration: none;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, \n  rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, \n  rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n  list-style-type: none;\n\n  > a {\n    \n    text-decoration: none;\n    color: black; \n  }\n\n  :hover,\n  :focus {\n    > a {\n      text-decoration: none;\n      color: #ff255f;\n\n    }\n  }\n\n}\n`;\n\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  margin: 20px 0;\n`;\n\nexport const OverviewContainer = styled.div`\n  width: 300px;\n  margin-left: 30px;\n`;\n\nexport const ButtonContainer = styled.div`\n  margin: 20px 20px 20px 0;\n      font-weight: 600;\n  > a {\n    padding: 10px 20px;\n    border-radius: 5px;\n    text-decoration: none;\n    color: black;\n    // text-transform: uppercase;\n    \n  }\n  .active {\n    color: #ff255f;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, NavLink, useLocation } from 'react-router-dom';\nimport * as API from '../ApiThemoviedb/ApiThemoviedb';\nimport { RxChevronLeft } from 'react-icons/rx';\nimport { MovieContainer, DetailsContainer, OverviewContainer, ButtonContainer, NavLinkBtn } from './MovieDetails.styled';\n/* eslint-disable react-hooks/exhaustive-deps */\n \n\nexport const MovieDetails = () => {\n  const params = useParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  function fetchMovies() {\n    fetch(`${API.BASE_URL}/movie/${params.movieId}?api_key=${API.API_KEY}`)\n      .then(response => response.json())\n      .then(response => {\n        setMovies(response);\n      })\n      .catch(console.error());\n  }\n  if (movies.success === false)\n    return (\n      <MovieContainer>\n        <NavLinkBtn type=\"submit\" className=\"button\">\n          <NavLink to=\"/\"><RxChevronLeft style={{ width: 12, height: 12 }} /> Go back</NavLink>\n        </NavLinkBtn>\n        <DetailsContainer>\n          <div>We don`t have any details for this movie</div>\n        </DetailsContainer>\n      </MovieContainer>\n    );\n\n  const { original_title, poster_path, overview, vote_average, genres } =\n    movies;\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <MovieContainer>\n      <NavLinkBtn type=\"submit\" className=\"button\">\n        <NavLink to={backLinkHref}><RxChevronLeft style={{ width: 12, height: 12 }} /> Go back</NavLink>\n      </NavLinkBtn>\n      <DetailsContainer>\n        <img\n          src={`${API.BASE_URL_IMAGE}${poster_path}`}\n          alt={original_title}\n          width=\"300\"\n        />\n        <OverviewContainer>\n          <h2>{original_title}</h2>\n          <p>User score {vote_average * 10}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres &&\n            genres.map(({ name }) => {\n              return name + ' ';\n            })}\n        </OverviewContainer>\n      </DetailsContainer>\n      <h3>Additional information</h3>\n      <ButtonContainer>\n        <NavLink to=\"cast\">Cast</NavLink>\n        <NavLink to=\"reviews\">Reviews</NavLink>\n      </ButtonContainer>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </MovieContainer>\n  );\n};\n\nexport default MovieDetails;\n\n\n"],"names":["MovieContainer","styled","NavLinkBtn","DetailsContainer","OverviewContainer","ButtonContainer","params","useParams","useState","movies","setMovies","location","useLocation","useEffect","fetch","API","movieId","then","response","json","catch","console","error","success","type","className","to","style","width","height","original_title","poster_path","overview","vote_average","genres","backLinkHref","state","from","src","alt","map","name","Suspense","fallback"],"sourceRoot":""}